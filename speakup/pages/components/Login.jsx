import Link from "next/link";
import React, { useState } from "react";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { useRouter } from "next/router";
import Head from "next/head";



const login = () => {
   const [email,setEmail] = useState("");

   const [loading,setLoading] = useState(false);
   
   const [password,setPassword] = useState("");
   
  const router = useRouter();

   const handleClick = async (event) => {
    event.preventDefault();
    setLoading(true)
        
    if(!email || !password) {
      toast.warning("Please fill all the field !!", {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "dark",
      });
      setLoading(false)
      return;
  }
    try {
      const data = await fetch("/api/studentlogin", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          email,password
        }),
      });
      let response = await data.json();
      if (response.success === true){
        toast.success("Login Successfull !!", {
          position: "top-right",
          autoClose: 2000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "dark",
        });
        setLoading(false)
        localStorage.setItem("student-token",JSON.stringify(response.token));
       setTimeout(() => {
        router.push("/complain")
       }, 2000);
      }
      else if (response.success === "Already"){
        toast.error("Register First !!", {
          position: "top-right",
          autoClose: 3000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "dark",
        });
        setLoading(false)
      }
      else{
        toast.error("Click Again !!", {
          position: "top-right",
          autoClose: 3000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "dark",
        });      
        setLoading(false)
        
      }
    } catch (error) {
      console.log(error);
      setLoading(false)
    }
}


  return (
    <>
    <ToastContainer
    position="top-right"
    autoClose={3000}
    hideProgressBar={false}
    newestOnTop={false}
    closeOnClick
    rtl={false}
    pauseOnFocusLoss
    pauseOnHover
    theme="light"
  />
    <Head>

<title>SPEAK-UP : LOGIN</title>
<meta name="description" content="Generated by create next app" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<link rel="icon" href="/favicon.ico" />

</Head>
    <div className="flex items-center justify-center flex-col ">
      <div className="bg-green-900 rounded p-2 px-5 absolute top-[5rem] z-10">
        <h1 className="text-white text-3xl uppercase">Student</h1>
      </div>
      <div className="border-4 border-white p-5 relative rounded bg-white/30 w-[30rem] shadow-3xl mb-[6.3rem]">
        <div className="flex items-center justify-center mt-9">
          <img src="/images/logo2.png " className="w-[12rem]" />
        </div>
        <form className="flex items-center justify-center flex-col ">
          <div className="relative">
            <div className="relative mb-6 ">
              <div className="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                <i className="fa-solid fa-envelope  text-green-900 text-3xl"></i>
              </div>
              <div className="absolute w-[2px] h-[36px] bg-green-700 top-[10px] bottom-[2rem] left-[52px]"></div>
              <input
                type="email"
                id="email"
                name="email"
                className="text-green-800  rounded-lg block w-[24rem] text-2xl pl-[4rem] p-3 dark:placeholder:text-green-900 bg-white dark:text-green-900 outline-none"
                placeholder="Your Email"
                autoComplete="off"
                required
                onChange={(e) => {
                  setEmail(e.target.value);
                }}
                
              />
            </div>
          </div>
          <div className="relative">
            <div className="relative mb-5 ">
              <div className="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                <i className=" fa-solid fa-lock  text-green-900 text-3xl"></i>
              </div>
              <div className="absolute w-[2px] h-[36px] bg-green-700 top-[10px] bottom-[2rem] left-[52px]"></div>
              <input
                type="password"
                id="password"
                name="password"
                className="text-green-800  rounded-lg block w-[24rem] text-2xl pl-[4rem] p-3 dark:placeholder:text-green-900 bg-white dark:text-green-900 outline-none"
                placeholder="Your Password"
                autoComplete="off"
                required
                onChange={(e) => {
                  setPassword(e.target.value);
                }}
              />
            </div>
            <div className="mb-10">
            <span className="text-xl">Don't have an account? <Link  className=" text-green-800 hover:text-green-600  " href={"/registered"}>Registration</Link></span>
            </div>
          </div>
          <button
                type="submit"
                className="bg-green-900 w-[15rem] hover:bg-green-800 shadow-4xl  transition-all duration-300 text-white h-[3.8rem] cursor-pointer rounded text-3xl  flex items-center justify-center"
                onClick={handleClick}
              >{loading ? <img className="w-[3rem] h-[3rem]" src="/loader/loaderstudent.gif"/>  : "Login"}</button>
        </form>
      </div>
    </div>
    </>
  );
};

export default login;
